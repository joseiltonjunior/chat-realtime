import Head from 'next/head'
import { useCallback, useEffect, useState } from 'react'
import { io } from 'socket.io-client'

interface messageProps {
  name: string
  text: string
  id: string
  socketID: string
}

const socket = io()

export default function Home() {
  const [user, setUser] = useState<string>()
  const [verifyUser, setVerifyUser] = useState(Boolean)
  const [message, setMessage] = useState<string>()
  const [messages, setMessages] = useState<messageProps[]>([])

  const sendMessage = async () => {
    socket.emit('createdMessage', {
      name: user,
      text: message,
      id: `${socket.id}${Math.random()}`,
      socketID: socket.id,
    })

    setMessage('')
  }

  const socketInitializer = useCallback(async () => {
    await fetch('/api/socket')

    const socket = io()

    socket.on('newIncomingMessage', (msg) => {
      setMessages([...messages, msg])
      console.log(messages)
    })
  }, [messages])

  useEffect(() => {
    socketInitializer()
  }, [socketInitializer])

  return (
    <>
      <Head>
        <title>Chat</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1>chat beta</h1>

        {verifyUser ? (
          <>
            <div className="messages">
              {messages.map((item) => (
                <div key={item.id}>
                  <p>
                    {item.name} - {item.text}
                  </p>
                </div>
              ))}
            </div>
            <input
              type="text"
              name="message"
              value={message}
              placeholder="Digite sua mensagem"
              onChange={(e) => setMessage(e.target.value)}
            />
            <button type="button" onClick={sendMessage} disabled={!message}>
              Enviar
            </button>
          </>
        ) : (
          <>
            <form
              onSubmit={(e) => {
                e.preventDefault()
                setVerifyUser(true)
              }}
            >
              <input
                type="text"
                name="username"
                placeholder="Digite seu usuÃ¡rio"
                onChange={(e) => setUser(e.target.value)}
              />
              <button type="submit" disabled={!user || user.length < 3}>
                Entrar
              </button>
            </form>
          </>
        )}
      </main>
    </>
  )
}
